# AUTOGENERATED! DO NOT EDIT! File to edit: algo_ml_eda.ipynb (unless otherwise specified).

__all__ = ['describe', 'say_hello']

# Cell
def describe(df):
    """
    描述df的
        data types
        percent missing
        unique values
        mode 众数
        count mode 众数计数
        % mode 众数占所有数据的百分比
        distribution stats  分布数据 分位数
    :param df:
    :return:
    """
    import pandas as pd
    pd.set_option('display.max_rows', 200)
    pd.set_option('display.max_columns', 100)  # 设置显示数据的最大列数，防止出现省略号…，导致数据显示不全
    pd.set_option('expand_frame_repr', False)  # 当列太多时不自动换行

    # data types
    dqr_data_types = pd.DataFrame(df.dtypes, columns=['Data Type'])
    # count missing
    dqr_count_missing = pd.DataFrame(df.isnull().sum(), columns=['count Missing'])
    # percent missing
    dqr_percent_missing = pd.DataFrame(100 * (df.isnull().sum() / len(df)).round(3), columns=['% Missing'])

    # unique values
    dqr_unique_values = pd.DataFrame(columns=['Unique Values'])
    for c in df:
        dqr_unique_values.loc[c] = df[c].nunique()

    # mode 众数
    dqr_mode = pd.DataFrame(df.mode().loc[0])
    dqr_mode.rename(columns={dqr_mode.columns[0]: "Mode"}, inplace=True)

    # count mode
    dqr_count_mode = pd.DataFrame(columns=['Count Mode'])
    for c in df:
        dqr_count_mode.loc[c] = df[c][df[c] == dqr_mode.loc[[c]].iloc[0]['Mode']].count()

        # % mode
    dqr_percent_mode = pd.DataFrame(100 * (dqr_count_mode['Count Mode'].values / len(df)), \
                                    index=dqr_count_mode.index, columns=['% Mode'])

    # distribution stats
    df['temp_1a2b3c__'] = 1
    dqr_stats = pd.DataFrame(df['temp_1a2b3c__'].describe())
    del df['temp_1a2b3c__']
    for c in df:
        dqr_stats = dqr_stats.join(pd.DataFrame(df[c].describe()))
    del dqr_stats['temp_1a2b3c__']
    dqr_stats = dqr_stats.transpose().drop('count', axis=1)

    print("num of records: {}, num of columns: {}".format(len(df), len(df.columns)))

    return dqr_data_types.join(dqr_unique_values[['Unique Values']].astype(int)).join(dqr_count_missing). \
        join(dqr_percent_missing).join(dqr_mode).join(dqr_count_mode[['Count Mode']].astype(int)).join(
        dqr_percent_mode).join(dqr_stats)

# Cell
def say_hello(to):
    """

    """
    return f'Hello {to}!'